#!/bin/sh
#
# /etc/init.d/galaxy
# Subsystem file for "galaxy" server
#
# chkconfig: 2345 95 05
# description: galaxy server daemon
#
# processname: galaxy

PROD_ADDR=xxxxx
. /etc/rc.d/init.d/functions
AGENT_IP=`hostname -i`
AGENT_HOME=/home/galaxy/agent
RETVAL=0

netCards=$(/sbin/ifconfig | awk '/Ethernet/{a=$0; getline; b=$0; print a,b}' | grep "inet addr" | awk '{print $1}')

readd_mod() {
    local DEV=$1
    local IP=$(cat /etc/sysconfig/network-scripts/ifcfg-${DEV} | grep IPADDR | cut -d "=" -f 2)
    local GATEWAY=$(ip route | grep ${DEV} | grep via | awk '{print $3}' | head -1)
    if ! grep "GATEWAY" /etc/sysconfig/network-scripts/ifcfg-${DEV} > /dev/null; then
        echo "GATEWAY=${GATEWAY}" >> /etc/sysconfig/network-scripts/ifcfg-${DEV}
    fi
    local ETH=${DEV}
    local driver=`ethtool -i ${ETH} | grep driver | awk '{print $2}'`

    if [[ ${driver} == "igb" ]] && ! grep "RSS=8,8" /etc/modprobe.conf | grep "igb" &>/dev/null ;then
        sed -i '/options igb.*/d' /etc/modprobe.conf
        sed -i '/^$/d' /etc/modprobe.conf
        echo "options igb RSS=8,8" >> /etc/modprobe.conf

        rmmod igb && modprobe igb && /etc/init.d/network start && /etc/rc.local
    fi
}

set_affinity() {
    MASK=$((1<<$VEC))
    printf "%s mask=%X for /proc/irq/%d/smp_affinity\n" $DEV $MASK $IRQ 2>/dev/null
    printf "%X" $MASK > /proc/irq/$IRQ/smp_affinity 2>/dev/null
    #echo $DEV mask=$MASK for /proc/irq/$IRQ/smp_affinity
    #echo $MASK > /proc/irq/$IRQ/smp_affinity
}

if [[ ${#netCards} -eq 0 ]]; then
    exit 1
fi
# check for irqbalance running
IRQBALANCE_ON=`ps ax | grep -v grep | grep -q irqbalance; echo $?`
if [ "$IRQBALANCE_ON" == "0" ] ; then
        echo " WARNING: irqbalance is running and will"
        echo "          likely override this script's affinitization."
        echo "          Please stop the irqbalance service and/or execute"
        echo "          'killall irqbalance'"
fi

for DEV in $(echo ${netCards}); do
    #
    # Set up the desired devices.
    #
    eth_interrputs=$(cat /proc/interrupts | grep "${DEV}" | wc -l )
    if [[ ${eth_interrputs} -le 2 ]]; then
        readd_mod ${DEV}
    fi
    for DIR in rx tx TxRx fp ''; do
        MAX=`grep $DEV-$DIR /proc/interrupts | wc -l`
        if [ "$MAX" == "0" ] ; then
          MAX=`egrep -i "$DEV:.*$DIR" /proc/interrupts | wc -l`
        fi
        if [ "$MAX" == "0" ] ; then
          echo no $DIR vectors found on $DEV
          continue
          #exit 1
        fi
        for VEC in `seq 0 1 $MAX`; do
        if [ "x$DIR" = "x" ]; then
              IRQ=`cat /proc/interrupts | grep -i $DEV-$DIR$VEC"$"  | cut  -d:  -f1 | sed "s/ //g"`
        else
          IRQ=`cat /proc/interrupts | grep -i $DEV-$DIR-$VEC"$"  | cut  -d:  -f1 | sed "s/ //g"`
        fi

        if [ -n  "$IRQ" ]; then
          set_affinity
        else
           IRQ=`cat /proc/interrupts | egrep -i $DEV:v$VEC-$DIR"$"  | cut  -d:  -f1 | sed "s/ //g"`
           if [ -n  "$IRQ" ]; then
             set_affinity
           fi
        fi
       done
    done
done

init() {
    // config core dump dir
    mkdir -p /home/disk2/coresave
    echo '/home/disk2/coresave/core.%e.%p.%t' | tee /proc/sys/kernel/core_pattern
    chmod 777 -R /home/disk2/coresave
    // mount cgroup
    CGROUP_ROOT=/cgroups
    mkdir -p $CGROUP_ROOT/cpu && mount -t cgroup -ocpu none $CGROUP_ROOT/cpu >/dev/null 2>&1
    mkdir -p $CGROUP_ROOT/memory && mount -t cgroup -omemory none $CGROUP_ROOT/memory >/dev/null 2>&1
    mkdir -p $CGROUP_ROOT/cpuacct && mount -t cgroup -ocpuacct none $CGROUP_ROOT/cpuacct >/dev/null 2>&1
    mkdir -p $CGROUP_ROOT/freezer && mount -t cgroup -ofreezer none $CGROUP_ROOT/freezer >/dev/null 2>&1
    mkdir -p $CGROUP_ROOT/blkio && mount -t cgroup -oblkio none $CGROUP_ROOT/blkio >/dev/null 2>&1
    // mount fstab
    mount -a
    /usr/sbin/adduser galaxy >/dev/null 2>&1
    mkdir -p $AGENT_HOME/work_dir
    GC_DIR_TO_REMOVE=$AGENT_HOME/gc_dir_to_remove
    test -e $AGENT_HOME/gc_dir && mv -f $AGENT_HOME/gc_dir $GC_DIR_TO_REMOVE
    test -e $GC_DIR_TO_REMOVE && nohup rm -rf $GC_DIR_TO_REMOVE>/dev/null 2>&1 &
    mkdir -p $AGENT_HOME/gc_dir
    mkdir -p $AGENT_HOME/log
    echo 0 > /proc/sys/kernel/printk
    ulimit -n 65536
}

download_pkg() {
    cd $AGENT_HOME
    wget -O tmp.tar.gz $PROD_ADDR
    tar -zxvf tmp.tar.gz
    cpu_count=`cat /proc/cpuinfo | grep processor | wc -l`
    cpu_share_count=`echo $(($cpu_count * 78 / 100 *1000))`
    sed -i "s/--agent_millicores_share=.*/--agent_millicores_share=$cpu_share_count/" conf/galaxy.flag
    mem_size=`free  -g | grep Mem | awk '{print (int($2) - 2) * 1024 * 1024 *1024 }'`
    sed -i "s/--agent_mem_share.*/--agent_mem_share=$mem_size/" conf/galaxy.flag
    echo "--agent_ip=$AGENT_IP" >> conf/galaxy.flag
    df -h | grep ssd | awk '{print $6}' >> conf/mount_bind.template
    df -h | grep disk | awk '{print $6}' >> conf/mount_bind.template
    echo "/home/opt" >> conf/mount_bind.template
}

start() {
    init;
    download_pkg;
    cd $AGENT_HOME
    ./bin/babysitter bin/galaxy-agent.conf start
}

stop() {
    cd $AGENT_HOME
    ./bin/babysitter bin/galaxy-agent.conf stop >/dev/null 2>&1
    sleep 2
    baby_pid=`ps -ef | grep babysitter | grep galaxy-agent | awk '{print $2}'`
    if [ ! -z "$baby_pid" -a "$baby_pid" != " " ];then
        kill -9 $baby_pid
        echo "clean babysitter"
    fi
    agent_pid=`ps -ef | grep agent | grep galaxy.flag | grep -v initd | awk '{print $2}'`
    if [ ! -z "$agent_pid" -a "$agent_pid" != " " ];then
        for pid in $agent_pid;
        do
            kill -9 $pid
        done
    fi
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    reload)
        echo "reload"
        ;;
    condrestart)
        echo "condrestart"
        ;;
    status)
        nc -z 0.0.0.0 8221 >/dev/null 2>&1
        RETVAL=$?
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|reload|condrestart|status}"
        RETVAL=1
esac
exit $RETVAL
